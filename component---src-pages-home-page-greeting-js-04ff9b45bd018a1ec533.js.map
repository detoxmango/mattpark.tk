{"version":3,"sources":["webpack:///./src/pages/homePage/greeting.js","webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js"],"names":["useStyles","makeStyles","theme","root","paper","background","greeting","width","fontSize","fontFamily","Greeting","classes","className","variant","gutterBottom","Paper","props","ref","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","other","outlined","concat","rounded","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","name"],"mappings":"4FAAA,oEASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAENC,MAAO,CACLC,WAAY,cAEdC,SAAU,CACRC,MAAO,OACPC,SAAU,MACVC,WAAY,kBAmBDC,UAfE,WACf,IAAMC,EAAUX,IAEhB,OACE,yBAAKY,UAAWD,EAAQR,MACtB,kBAAC,IAAD,CAAOS,UAAWD,EAAQP,OACxB,kBAAC,IAAD,CAAYQ,UAAWD,EAAQL,SAAUO,QAAQ,KAAKC,cAAY,GAAlE,cACa,yCADb,6C,kCC5BR,sFAkCIC,EAAQ,cAAiB,SAAeC,EAAOC,GACjD,IAAIN,EAAUK,EAAML,QAChBC,EAAYI,EAAMJ,UAClBM,EAAmBF,EAAMG,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBL,EAAMM,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBP,EAAMQ,UACzBA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,EAAiBT,EAAMH,QACvBA,OAA6B,IAAnBY,EAA4B,YAAcA,EACpDC,EAAQ,YAAyBV,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAEzG,OAAoB,gBAAoBI,EAAW,YAAS,CAC1DR,UAAW,YAAKD,EAAQR,KAAMS,EAAuB,aAAZC,EAAyBF,EAAQgB,SAAWhB,EAAQ,YAAYiB,OAAOJ,KAAcF,GAAUX,EAAQkB,SAChJZ,IAAKA,GACJS,OA2DU,iBArGK,SAAgBxB,GAClC,IAAI4B,EAAa,GAMjB,OALA5B,EAAM6B,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYF,OAAOM,IAAU,CACtCC,UAAWF,MAGR,YAAS,CAEd9B,KAAM,CACJiC,gBAAiBlC,EAAMmC,QAAQhC,WAAWD,MAC1CkC,MAAOpC,EAAMmC,QAAQE,KAAKC,QAC1BC,WAAYvC,EAAMwC,YAAYC,OAAO,eAIvCd,QAAS,CACPe,aAAc1C,EAAM2C,MAAMD,cAI5BjB,SAAU,CACRmB,OAAQ,aAAalB,OAAO1B,EAAMmC,QAAQU,WAE3CjB,KA6E6B,CAChCkB,KAAM,YADO,CAEZjC","file":"component---src-pages-home-page-greeting-js-04ff9b45bd018a1ec533.js","sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  paper: {\r\n    background: 'ghostwhite',\r\n  },\r\n  greeting: {\r\n    width: '55vw',\r\n    fontSize: '6vw',\r\n    fontFamily: 'Montserrat',\r\n  }\r\n}))\r\n\r\nconst Greeting = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.greeting} variant=\"h1\" gutterBottom>\r\n          My name is <b>Matt Park.</b> I am from the greater New York area.\r\n        </Typography>\r\n      </Paper>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Greeting","import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);"],"sourceRoot":""}